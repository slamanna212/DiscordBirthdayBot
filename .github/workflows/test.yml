name: Test Discord Birthday Bot

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-docker-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Test Docker build
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./docker/Dockerfile
        push: false
        tags: discord-birthday-bot:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test image functionality
      run: |
        # Build the image locally for testing
        docker build -f docker/Dockerfile -t discord-birthday-bot:test .
        
        # Test that the image can start (it will fail due to missing env vars, but should not crash immediately)
        echo "üîç Testing basic image startup..."
        timeout 10s docker run --rm discord-birthday-bot:test || [ $? -eq 124 ] || [ $? -eq 1 ]
        
        # Test health check functionality (without Discord connection)
        echo "üîç Testing health check script exists and runs..."
        if docker run --rm discord-birthday-bot:test test -f scripts/health-check.js; then
          echo "‚úÖ Health check script found"
        else
          echo "‚ùå Health check script missing"
          exit 1
        fi
        
        # Test timezone script
        echo "üîç Testing timezone configuration..."
        if docker run --rm discord-birthday-bot:test node scripts/test-timezone.js; then
          echo "‚úÖ Timezone configuration works"
        else
          echo "‚ùå Timezone configuration failed"
          exit 1
        fi
        
        # Test Node.js version
        echo "üîç Testing Node.js version..."
        if docker run --rm discord-birthday-bot:test node scripts/test-node-version.js; then
          echo "‚úÖ Node.js version is correct"
        else
          echo "‚ùå Node.js version check failed"
          exit 1
        fi
        
        echo "‚úÖ Docker image builds successfully and all tests pass"

  validate-structure:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Validate project structure
      run: |
        # Check that all required files exist
        echo "üîç Validating project structure..."
        
        # Check source files
        [ -f "src/bot.js" ] || (echo "‚ùå src/bot.js missing" && exit 1)
        [ -f "src/database.js" ] || (echo "‚ùå src/database.js missing" && exit 1)
        
        # Check scripts
        [ -f "scripts/deploy-commands.js" ] || (echo "‚ùå scripts/deploy-commands.js missing" && exit 1)
        [ -f "scripts/docker-run.sh" ] || (echo "‚ùå scripts/docker-run.sh missing" && exit 1)
        [ -f "scripts/health-check.js" ] || (echo "‚ùå scripts/health-check.js missing" && exit 1)
        [ -f "scripts/test-timezone.js" ] || (echo "‚ùå scripts/test-timezone.js missing" && exit 1)
        
        # Check docker files
        [ -f "docker/Dockerfile" ] || (echo "‚ùå docker/Dockerfile missing" && exit 1)
        [ -f "docker/.dockerignore" ] || (echo "‚ùå docker/.dockerignore missing" && exit 1)
        
        # Check configuration
        [ -f "package.json" ] || (echo "‚ùå package.json missing" && exit 1)
        [ -f "env.example" ] || (echo "‚ùå env.example missing" && exit 1)
        
        echo "‚úÖ All required files present"

    - name: Validate package.json
      run: |
        echo "üîç Validating package.json..."
        
        # Check if package.json is valid JSON
        node -e "JSON.parse(require('fs').readFileSync('package.json', 'utf8'))" || (echo "‚ùå Invalid package.json" && exit 1)
        
        # Check required dependencies
        node -e "
          const pkg = JSON.parse(require('fs').readFileSync('package.json', 'utf8'));
          const deps = pkg.dependencies || {};
          if (!deps['discord.js']) throw new Error('Missing discord.js dependency');
          if (!deps['sqlite3']) throw new Error('Missing sqlite3 dependency');
          if (!deps['node-cron']) throw new Error('Missing node-cron dependency');
          console.log('‚úÖ All required dependencies present');
        "

    - name: Validate environment example
      run: |
        echo "üîç Validating environment example..."
        
        # Check that env.example contains required variables
        grep -q "DISCORD_TOKEN" env.example || (echo "‚ùå DISCORD_TOKEN missing from env.example" && exit 1)
        grep -q "DISCORD_CLIENT_ID" env.example || (echo "‚ùå DISCORD_CLIENT_ID missing from env.example" && exit 1)
        grep -q "BIRTHDAY_CHANNEL_ID" env.example || (echo "‚ùå BIRTHDAY_CHANNEL_ID missing from env.example" && exit 1)
        
        echo "‚úÖ Environment example is valid" 